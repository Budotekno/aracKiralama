<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAYQAAAM4AAADuAAAA5gAA
        AJ4AAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMDQsBy11c
        D910chL9aGYP6Tw6CckFBQHbAAAArwAAABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACkCAgDecW8T+HRyEv90chL/dHIS/3RyEv9mZRDmAAAA9AAAANkAAAAcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAHYoJwfAdHIS/3RyEv90chL/dHIS/3RyEv86OgnCFRUEwzo4CcMAAADWAAAADQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJg/PwrGdHIS/3RyEv90chL/dHIS/3RyEv4FBQHVT04Mz3Ry
        Ev8oJwe/AAAAowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIs6OgnFdHIS/3RyEv90chL/dHIS/0hI
        DMUHBwHSdHIS/3RyEv90chL+CgoBzgAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFEVEwTFdHIS/3Ry
        Ev9zcRL7T04MzwMDAN1TUQ3RdHIS/3RyEv90chL/YV8Q4QEBAN4AAAALAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA4AAADzAgIA4gQEAdgBAQDrCwsB1EZFC9N0chL/dHIS/3RyEv90chL/dHIS/yMjBcAAAAB5AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAB+FhYEw2xqEe90chL+dHIS/3RyEv90chL/dHIS/3RyEv90chL/dHIS/2xq
        EfABAQDgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAzkhFCsd0chL/dHIS/3RyEv90chL/dHIS/3Ry
        Ev90chL/dHIS/3RyEv8cHATBAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQEBAN5UVA3MdHIS/3Ry
        Ev90chL/dHIS/3RyEv90chL/dHIS/3RyEv9aWA7ZAAAA1AAAAAAAAAAAAAAAAAAAAAoAAABDAAAAeAAA
        AKQAAADAAAAA1wAAAOcAAADuAAAA7gAAAOEAAAC3AAAAgwAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AG0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAANAcHAdBvbhH1AgIA4YSBDdGgnhLkAQEB7JmXVtPPzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8XCbvUFBQLfk48P2YSD
        D9IGBgHRVFMN0gAAAMUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAWRkZBMEpKQe/KCgEv7m2FP8UFALOY2I5wc/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP98e0bJGhoDyLm2FP8HBwHWWFUN0QAAAPEAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbSEhBcACAgDgqqYS7HBvDcgNDQfQzst0/s/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/NynP8AgIB56yqE+9BQAe/KyoHvQUFAdoAAAAiAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbQQEAdgkJATAubYU/woK
        AdWVlFTRz8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/GxsPyIF+DdB1cg3JFRUEwwYGAdQAAAAjAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAA
        AP9zcA3IkpEP2gcHBdrPzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/KikYw29uDciDgQ3QDg4DyAUF
        AdgAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAagAAAP+tqxPwSkoIwEJAJr7PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/FxUNzIB+
        Ds95dw3LFBIDxAAAAPAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAYQAAAPO5thT/IiEEw3Z0QsXPzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/Oy3T+AwMC5a6sE/JLSQi/CgoBzQAAAMUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAICAOm5thT/GhgDx5OQUc/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP+Yl1XVDQ0B0bm2FP8TEwPKAQEA6gAAAG8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQAAAPq3tBT8GxsDxnx6
        RsbPzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP8nJxbEXVwJw6elEesAAAD6AAAA5gAAAAsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AMmSkQ/aQ0EHv0BAJL7PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/7OwZOUDAwHis7AT+EFAB78AAAD9AAAATAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAIVBQAe/lpMQ3AUFAuHNynP8z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/xgYDspZWAnCrakT7gEB
        AOsAAABxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8CAgDksq8T9RoYA8dcWjLAz8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/bWs+xQsL
        AdO4tRT9JiYEwQAAAJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACSPDsHv5mXEN8CAgHkpqRe2s/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP+pqF/fAgIB5pyZEeCFgw/RAAAA3gAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAA2Xp5
        Ds10cg3KAwMB5K+sYd/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/7OwZOYEBALjcnENyaupE+oDAwDeAAAARQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAALgEBAOSLiBDVcnENyQMDAeOQjVDOz8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/p6Rd3QUFAuJlYgrFtLIU9g4OAcgAAABxAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgCAQDgdXQNypKRD9oICAHXJSMUw6yqYd/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8zJcvtWVTHBAwMB43x7Ds61sxT6GhoDxAAAAI8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAA0TU0BcCwrRPzVVMJwQMD
        AOIREQrNVlUwwJyaV9a7uGnpwL1s77u3aOuMiU7OQkIlwAMDAeUbGgPGpqMS6ayqE/AREAHNAAAAmgAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAA
        AJEGBgDbamcMxre0FPuDgA3RNTUFwBAQAc4DAwDkAQEA7wMDAOIQEAHNPz0Hv5iVEN25thT/cnENyQMC
        AOIAAAB1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAvAAAAtgUFAOBGRgjAmpgR37m2FP+5thT/ubYU/7m2FP+5thT/srAT9m1q
        DMcNDQHQAAAAyAAAADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8AAACIAAAAzwICAOQMDAHSGhoDxxsa
        A8YLCwHTAQEA5wAAAKkAAABHAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAkAAAAvAAAAQwAAAEAAAAArAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD8B/////8AAPwB/////wAA+AD/////AAD4AH////8AAPgA
        f////wAA+AA/////AAD4AB////8AAPgAH////wAA/AAP////AAD8AA////8AAP4ADgAP/wAA/wAAAAP/
        AAD/gAAAAP8AAP/AAAAAfwAA/+AAAAA/AAD/+AAAAB8AAP/8AAAAHwAA//wAAAAPAAD//AAAAAcAAP/4
        AAAABwAA//gAAAAHAAD/+AAAAAMAAP/4AAAAAwAA//gAAAADAAD/+AAAAAMAAP/4AAAAAwAA//gAAAAH
        AAD/+AAAAAcAAP/4AAAABwAA//wAAAAPAAD//AAAAB8AAP/8AAAAPwAA//4AAAA/AAD//gAAAH8AAP//
        AAAA/wAA//+AAAH/AAD//8AAAf8AAP//4AAH/wAA///4AA//AAD///4AH/8AAP///8D//wAA////////
        AAA=
</value>
  </data>
</root>